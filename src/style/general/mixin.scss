@mixin breakpoint($point) {
  @if $point == xxl {
    @media only screen and (max-width: $break-xxl) {
      @content;
    }
  } @else if $point == xl {
    @media only screen and (max-width: $break-xl) {
      @content;
    }
  }@else if $point == lg {
    @media only screen and (max-width: $break-lg) {
      @content;
    }
  } @else if $point == md {
    @media only screen and (max-width: $break-md) {
      @content;
    }
  } @else if $point == sm {
    @media only screen and (max-width: $break-sm) {
      @content;
    }
  } @else if $point == xs {
    @media only screen and (max-width: $break-xs) {
      @content;
    }
  }
}

@mixin clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
      border-radius: 3px;
  }
  @if $direction == down {
      border-left: $size solid transparent;
      border-right: $size solid transparent;
      border-top: $size solid $color;
      margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
      border-left: $size solid transparent;
      border-right: $size solid transparent;
      border-bottom: $size solid $color;
      margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
      border-top: $size solid transparent;
      border-bottom: $size solid transparent;
      border-left: $size solid $color;
      margin-right: -$size;
  } @else if  $direction == left {
      border-top: $size solid transparent;
      border-bottom: $size solid transparent;
      border-right: $size solid $color;
      margin-left: -$size;
  }
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin circle($radius) {
  width: $radius;
  height: $radius;
  border-radius: 100%;
}

@mixin visuallyHidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

@mixin fade($type) {
  @if $type == 'hide' {
    pointer-events: none;
    opacity: 0;
    filter: alpha(0);
    transition: opacity 1s;
  }
  @else if $type == 'show' {
    pointer-events: all;
    opacity: 1;
    filter: alpha(100);
    transition: opacity 1s;
  }
}

@mixin center($position) {
  position: absolute;
  @if $position == 'vertical' {
    top: 50%;
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin list-item() {
  &:last-child {
    padding-right: 0;
  }
  &:first-child {
    padding-left: 0;
  }
}
